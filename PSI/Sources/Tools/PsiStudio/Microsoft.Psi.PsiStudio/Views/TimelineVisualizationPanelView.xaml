<!-- Copyright (c) Microsoft Corporation. All rights reserved.
     Licensed under the MIT License. -->

<UserControl
    x:Class="Microsoft.Psi.Visualization.Views.TimelineVisualizationPanelView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:cmd="http://www.galasoft.ch/mvvmlight"
    xmlns:ctrls="clr-namespace:Microsoft.Psi.Visualization.Controls"
    xmlns:conv="clr-namespace:Microsoft.Psi.Visualization.Converters"
    xmlns:views="clr-namespace:Microsoft.Psi.Visualization.Views"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    mc:Ignorable="d" 
    d:DesignHeight="300"
    d:DesignWidth="300"
    Height="{Binding Configuration.Height}"
    IsHitTestVisible="True">

    <UserControl.Resources>
        <conv:ColorConverter x:Key="ColorConverter" />
        <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </UserControl.Resources>

    <Grid x:Name="Root" ContextMenuOpening="Root_ContextMenuOpening" MouseMove="Root_MouseMove" ClipToBounds="True" Background="{x:Null}">
        <Grid.ContextMenu>
            <ContextMenu>
                <MenuItem Name="ShowLegend" Header="Show/Hide legend" Command="{Binding ShowHideLegendCommand}" Height="25" />
                <MenuItem Name="RemovePanel" Header="Remove panel" Command="{Binding RemovePanelCommand}" Height="25">
                    <MenuItem.Icon>
                        <Image Source="Icons\panel-remove.png" Height="16" Margin="4,0,0,0" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Name="Clear" Header="Clear" Command="{Binding ClearPanelCommand}" Height="25">
                    <MenuItem.Icon>
                        <Image Source="Icons\panel-clear.png" Height="16" Margin="4,0,0,0" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Name="ZoomToSelection" Header="Zoom to Selection" Command="{Binding ZoomToSelectionCommand}" Height="25">
                    <MenuItem.Icon>
                        <Image Source="Icons\zoom-to-selection.png" Height="16" Margin="4,0,0,0" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Name="ZoomToSessionExtents" Header="Zoom to Session Extents" Command="{Binding ZoomToSessionExtentsCommand}" Height="25">
                    <MenuItem.Icon>
                        <Image Source="Icons\zoom-to-session.png" Height="16" Margin="4,0,0,0" />
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>
        </Grid.ContextMenu>

        <ctrls:TimelineScroller Navigator="{Binding Navigator}" IsHitTestVisible="True" Background="Transparent">
            <ItemsControl ItemsSource="{Binding VisualizationObjects}" Background="{x:Null}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                            <ContentPresenter ContentTemplate="{Binding DefaultViewTemplate}" Visibility="{Binding Configuration.Visible, Converter={StaticResource BoolToVisibilityConverter}}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <views:TimelineView DataContext="{Binding Navigator}" ShowTicks="{Binding ElementName=Root, Path=DataContext.Configuration.ShowTimeTicks}" />

            <DataGrid
                ItemsSource="{Binding VisualizationObjects}"
                Visibility="{Binding Configuration.ShowLegend, Converter={StaticResource BoolToVisibilityConverter}}"
                Background="{x:Null}"
                Margin="5"
                BorderThickness="1"
                BorderBrush="{StaticResource LightBorderColorBrush}"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                GridLinesVisibility="None"
                AutoGenerateColumns="False"
                HeadersVisibility="None"
                SelectionMode="Single"
                SelectionUnit="FullRow"
                CanUserAddRows="False"
                EnableRowVirtualization="False">

                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Background" Value="{StaticResource DarkBackgroundColorBrush}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Configuration.Name, Mode=OneWay}" Foreground="{Binding LegendColor, Converter={StaticResource ColorConverter}}" HorizontalAlignment="Right" Margin="3, 0, 0, 0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text=":" Foreground="{Binding LegendColor, Converter={StaticResource ColorConverter}}" HorizontalAlignment="Center"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding LegendValue, Mode=OneWay}" Foreground="{Binding LegendColor, Converter={StaticResource ColorConverter}}" HorizontalAlignment="Left" Margin="0,0,3,3"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

            <Border BorderBrush="{StaticResource LightBorderColorBrush}">
                <Border.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsCurrentPanel}" Value="False">
                                <Setter Property="Control.BorderThickness" Value="1"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding IsCurrentPanel}" Value="True">
                                <Setter Property="Control.BorderThickness" Value="3"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>

            <Thumb Height="3" Cursor="SizeNS" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Opacity="0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DragDelta">
                        <cmd:EventToCommand Command="{Binding Path=ResizePanelCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Thumb>

        </ctrls:TimelineScroller>

        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseLeftButtonDown">
                <cmd:EventToCommand Command="{Binding Path=MouseLeftButtonDownCommand}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseRightButtonDown">
                <cmd:EventToCommand Command="{Binding Path=MouseRightButtonDownCommand}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
        </i:Interaction.Triggers>
    </Grid>
</UserControl>
