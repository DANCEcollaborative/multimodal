<!-- Copyright (c) Microsoft Corporation. All rights reserved.
     Licensed under the MIT License. -->

<views:InstantVisualizationPanelView
    x:Class="Microsoft.Psi.Visualization.Views.XYZVisualizationPanelView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:h="http://helix-toolkit.org/wpf"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cmd="http://www.galasoft.ch/mvvmlight"
    xmlns:conv="clr-namespace:Microsoft.Psi.Visualization.Converters"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:views="clr-namespace:Microsoft.Psi.Visualization.Views"
    Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"
    Width="{Binding Width}"
    IsHitTestVisible="True">

    <UserControl.Resources>
        <Storyboard x:Key="CameraStoryboard" />
    </UserControl.Resources>
    
    <Grid Name="XYZGrid" Background="Gray" Margin="{Binding VisualMargin}">

        <Grid.Resources>
            <conv:IconUriConverter x:Key="IconUriConverter" />
        </Grid.Resources>

        <Border BorderBrush="{StaticResource LightBorderColorBrush}" Background="{StaticResource MediumBackgroundColorBrush}" BorderThickness="1" />
        <h:HelixViewport3D 
            Grid.Row="1"
            Name="ViewPort3D"
            Background="{StaticResource DarkBackgroundBrush}"
            RotateAroundMouseDownPoint="{Binding RotateAroundMouseDownPoint}"
            ZoomAroundMouseDownPoint="{Binding ZoomAroundMouseDownPoint}"
            RotationSensitivity="{Binding RotationSensitivity}"
            ZoomSensitivity="{Binding ZoomSensitivity}"
            ShowCameraInfo="{Binding ShowCameraInfo}"
            ShowCameraTarget="{Binding ShowCameraTarget}"
            ShowCoordinateSystem="{Binding ShowCoordinateSystem}"
            ShowFieldOfView="{Binding ShowFieldOfView}"
            ShowFrameRate="{Binding ShowFrameRate}"
            ShowTriangleCountInfo="{Binding ShowTriangleCountInfo}"
            ShowViewCube="{Binding ShowViewCube}">
            <h:HelixViewport3D.Camera>
                <PerspectiveCamera x:Name="ViewCamera" Position="{Binding CameraPosition, Mode=TwoWay}" LookDirection="{Binding CameraLookDirection, Mode=TwoWay}" UpDirection="{Binding CameraUpDirection, Mode=TwoWay}" FieldOfView="{Binding CameraFieldOfView, Mode=TwoWay}"/>
            </h:HelixViewport3D.Camera>

            <ModelVisual3D>
                <ModelVisual3D.Content>
                    <AmbientLight Color="DarkGray"/>
                </ModelVisual3D.Content>
            </ModelVisual3D>

            <ModelVisual3D>
                <ModelVisual3D.Content>
                    <DirectionalLight Color="Gray" Direction="-1,-1,-1"/>
                </ModelVisual3D.Content>
            </ModelVisual3D>

            <ModelVisual3D x:Name="Root">
                <h:SortingVisual3D x:Name="SortingVisualRoot" CheckForOpaqueVisuals="True">
                    <h:SortingVisual3D.Children>
                        <h:GridLinesVisual3D MajorDistance="{Binding MajorDistance}" MinorDistance="{Binding MinorDistance}" Thickness="{Binding Thickness}" />
                    </h:SortingVisual3D.Children>
                </h:SortingVisual3D>
            </ModelVisual3D>
        </h:HelixViewport3D>

        <Border BorderThickness="1">
            <Border.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsCurrentPanel}" Value="False">
                            <Setter Property="Control.BorderBrush" Value="{StaticResource LightBorderColorBrush}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsCurrentPanel}" Value="True">
                            <Setter Property="Control.BorderBrush" Value="{StaticResource CursorBrush}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>

        <Button 
            Command="{Binding ToggleVisibilityCommand}"
            Background="{Binding BackgroundColor, Converter={StaticResource ColorToSolidColorBrushConverter}}"
            Height="16"
            Width="16"
            VerticalAlignment="Top"
            HorizontalAlignment="Right"
            ToolTip="Hide panel"
            Margin="4,4,22,4">
            <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=panel-showhide-smallbutton-faded.png}"/>
            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=XYZGrid}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=XYZGrid}" Value="False">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button 
            Command="{Binding RemovePanelCommand}"
            Background="{StaticResource DarkBackgroundBrush}"
            Height="16"
            Width="16"
            VerticalAlignment="Top"
            HorizontalAlignment="Right"
            ToolTip="Remove panel"
            Margin="4,4,4,4">
            <Image Source="{Binding ., Converter={StaticResource IconUriConverter}, ConverterParameter=remove-smallbutton-faded.png}"/>
            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=XYZGrid}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=XYZGrid}" Value="False">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseLeftButtonDown">
                <cmd:EventToCommand Command="{Binding Path=MouseLeftButtonDownCommand}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
            <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                <cmd:EventToCommand Command="{Binding Path=PreviewMouseRightButtonDownCommand}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseRightButtonUp">
                <cmd:EventToCommand Command="{Binding Path=MouseRightButtonUpCommand}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
        </i:Interaction.Triggers>
    </Grid>
</views:InstantVisualizationPanelView>
